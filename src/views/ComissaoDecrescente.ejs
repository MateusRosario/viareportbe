<html lang="pt-BR">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Comissão decrescente</title>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/js/bootstrap.bundle.js"></script>
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
    <style>
        @import url('https://cdn.jsdelivr.net/npm/bootstrap@5.3.2/dist/css/bootstrap.css');
        @import url("https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.2/font/bootstrap-icons.min.css");

        :root {
            --primaria-100: #014B83;
            --primaria-60: #83A6BF;
            --primaria-0: white;

            --secundaria-destaque: #FC7422;
            --secundaria-neutro: #F6F6F6;
            --secundaria-20: #c7dceb;

            --base-100: #014B83;
            --base-80: #1A5D8F;
            --base-60: #336E9B;
            --base-40: #4D81A8;
            --base-20: #6693B4;
            --base-0: #83A6BF;

            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            font-size: 13.5px;
        }

        .nav-text {
            font-size: 20px;
            font-weight: bold;
            color: white !important;

        }

        .nav-bar {
            background-color: var(--base-100);
            color: white !important;
        }

        .shadown {
            box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 10px 0 rgba(0, 0, 0, 0.2);
        }

        footer {
            position: absolute;
            bottom: 0px;
            width: 100%;
            background-color: var(--base-100);
            color: white;
            text-align: center;
            font-size: 12px !important;
        }

        thead {
            background: white;
            position: sticky;
            top: 0;
            /* Don't forget this, required for the stickiness */
        }

        tfoot {
            background: white;
            position: sticky;
            bottom: 0;
            /* Don't forget this, required for the stickiness */
        }

        h6 {
            text-transform: uppercase;
            font-weight: bold;
        }

        .tb-row:hover {
            background-color: var(--primaria-60);
            color: white;
        }

        .row-impar {
            background-color: #eeeeee;
        }

        .t-header {
            font-weight: bold;
            background-color: #d5d5d5;
        }

        @media print {
            * {
                font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
                margin: 0;
                padding: 0;
                font-size: 9px;
            }

            .card {
                border: none;
                box-shadow: none;
            }

            @page {
                size: A4;
                margin-top: 3mm;
                margin-bottom: 5mm;
                margin-right: 2mm;
                margin-left: 2mm;
            }


            /* @page {
                @bottom-right {
                    content: counter(page);
                }
            } */

            /* } */

            #card-body-container {
                display: table;
            }

            #pageFooter {
                display: table-footer-group;
            }

            #pageFooter::after {
                counter-increment: page;
                content: 'Page: ' counter(page);
            }
        }
    </style>
</head>

<body>
    <script>
        const apiUrl = 'http://127.0.0.1:9005/v1/';
        const cnpj = '32310156000165';//'<%=cnpj%>';
        const NumberFormatter = new Intl.NumberFormat("pt-BR", { style: "currency", currency: "BRL" });
        const Percentformatter = new Intl.NumberFormat("pt-BR", { style: "percent" });

        const produtoHeader = `
        <div class="row ms-5 g-0 t-header">
            <div class="col-1 text-center">
                <i class="bi bi-arrow-return-right" style="font-size: larger;"></i>
            </div>
            <div class="col-3">Nome produto</div>
            <div class="col-3">Tipo comissao</div>
            <div class="col text-end">Valor total</div>
            <div class="col text-end">Percentual</div>
            <div class="col text-end">Valor comissao</div>
        </div>
        `;

        const header = {
            'Content-Type': 'application/json;charset=utf-8',
            'cnpj': cnpj
        };
        $(document).ready(() => {
            fetch(`${apiUrl}empresa/get_by_model`, {
                method: 'POST',
                headers: header,
                body: '{"id": 1 }'
            }).then(async res => {
                if (res.ok) {
                    let emp = await res.json();
                    if (emp && emp.content && emp.content.length > 0)
                        BuildHeader($('#card-header-container'), emp.content[0]);

                    BuildBody($('#card-body-container'));
                }
            }).catch(err => console.error(err));
        })

        function BuildHeader(container, emp) {
            container.append(`
            <div class="row p-1">
                <div class="col text-start">
                    <h6>Relatório de Comissão de Vendas Decrescente</h6>
                </div>
            </div>
            <div class="row p-1 pb-0 pt-0">
                <div class="col text-center">
                    <h6>${emp.razao_social}</h6>
                </div>
            </div>
            <div class="row p-1">
                <div class="col text-start">
                    aqui os filtros
                </div>
                <div class="col text-end">
                    ${new Date().toLocaleString()}
                </div>
            </div>
            `);
        }

        function BuildBody(container) {
            // const obj = JSON.parse(`[{"cliente":{"id":1,"nome":"CONSUMIDOR"},"data_emissao":"2023-12-01",  "data_saida": "2023-12-01","gerado":"SIM","id":120031,"vendedor":[[3,[{"cliente":{"id":1,"nome":"CONSUMIDOR"},"comissao_indice":"RESTRITO POR COMISSÃO DECRESCENTE","comissao_percentual":5,"comissao_valor":1.75,"id":293638,"id_produto":1641,"id_venda":120031,"id_vendedor":3,"nome_produto":"TRELICA TG8 6MT GERDAU","nome_vendedor":"JACQUELINE","vl_total":35},{"cliente":{"id":1,"nome":"CONSUMIDOR"},"comissao_indice":"RESTRITO POR COMISSÃO DECRESCENTE","comissao_percentual":5,"comissao_valor":6.6,"id":293639,"id_produto":5863,"id_venda":120031,"id_vendedor":3,"nome_produto":"CIMENTO POTY/TOCANTINS 50 KG","nome_vendedor":"JACQUELINE","vl_total":132},{"cliente":{"id":1,"nome":"CONSUMIDOR"},"comissao_indice":"RESTRITO POR COMISSÃO DECRESCENTE","comissao_percentual":5,"comissao_valor":0.84,"id":293640,"id_produto":4464,"id_venda":120031,"id_vendedor":3,"nome_produto":"SPRAY TEKBOND 350ML PRIME FUNDO","nome_vendedor":"JACQUELINE","vl_total":16.99},{"cliente":{"id":1,"nome":"CONSUMIDOR"},"comissao_indice":"RESTRITO POR COMISSÃO DECRESCENTE","comissao_percentual":1,"comissao_valor":0.13,"id":293642,"id_produto":6394,"id_venda":120031,"id_vendedor":3,"nome_produto":"ESPATULA TIGRE 06 CM 2,5","nome_vendedor":"JACQUELINE","vl_total":13.01}]]],"vl_desconto":1.96,"vl_produto":198.96,"vl_total":197}]`);

            const getRow = (comissao, index) => {

                return `
                    <div class="row g-0 ms-5 tb-row ${index % 2 === 0 ? '' : 'row-impar'}">
                        <div class="col-1"></div>
                        <div class="col-3">${comissao.nome_produto}</div>
                        <div class="col-3">${comissao.comissao_indice}</div>
                        <div class="col text-end">${NumberFormatter.format(comissao.vl_total ? comissao.vl_total : 0.00)}</div>
                        <div class="col text-end">${Percentformatter.format(comissao.comissao_percentual ? comissao.comissao_percentual / 100 : 0.00)}</div>
                        <div class="col text-end">${NumberFormatter.format(comissao.comissao_valor ? comissao.comissao_valor : 0.00)}</div>
                    </div>                
                `;
            }

            fetch(`${apiUrl}comissao/get_comissao_decrescente`, {
                method: 'GET',
                headers: header,
            }).then(async res => {
                if (res.ok) {
                    const obj = await res.json();
                    const vendedorContainerMap = new Map();
                    let totais = new Map(obj.sum);

                    for (let v of obj.itens) {
                        v.vendedor = new Map(v.vendedor);
                        for (let key of v.vendedor.keys()) {
                            let comissoes = v.vendedor.get(key); // para cada key (id do vendedor) há uma lista de itens
                            comissoes = comissoes
                            let sum = {
                                total: 0.00,
                                percentual: 0.00
                            }

                            if (!vendedorContainerMap.has(comissoes[0].id_vendedor)) {
                                let aux = $(document.createElement('div'));
                                aux.id = `vendedor-${comissoes[0].id_vendedor}`;
                                aux.append(`                            
                                <div class="row pb-0 g-0">
                                    <div class="col p-2" style="border: 0.05mm solid rgba(0, 0, 0, 0.3); font-weight: bold;">
                                         VENDEDOR: ${comissoes[0].nome_vendedor} (${comissoes[0].id_vendedor})
                                     </div>
                                 </div> 
                                `)
                                vendedorContainerMap.set(comissoes[0].id_vendedor, aux);
                            }
                            const vContainer = vendedorContainerMap.get(comissoes[0].id_vendedor);
                            let rows = comissoes.map((c, index) => {
                                sum.total += c.comissao_valor ? c.comissao_valor : 0;
                                sum.percentual += c.comissao_percentual ? c.comissao_percentual / 100 : 0;
                                return getRow(c, index, sum)
                            }).join('\n')

                            vContainer.append(`
                            <div class="m-1" style="border: 0.05mm solid rgba(0, 0, 0, 0.2)">
                                <div class="row t-header ms-2 mt-2 g-0">
                                    <div class="col text-start">Venda</div>
                                    <div class="col">Data saída</div>
                                    <div class="col-4 text-start">Cliente</div>
                                    <div class="col text-end">Total</div>
                                    <div class="col text-end">Percetual médio</div>
                                    <div class="col text-end">Valor comissão</div>
                                </div>
                                <div class="row ms-2 tb-row g-0">
                                    <div class="col text-start">${v.id}</div>
                                    <div class="col">${new Date(v.data_saida).toLocaleDateString()}</div>
                                    <div class="col-4 text-start">${v.cliente.nome}</div>
                                    <div class="col text-end">${NumberFormatter.format(v.vl_total ? v.vl_total : 0.00)}</div>
                                    <div class="col text-end">${comissoes.length == 0 ? 0 : Percentformatter.format(sum.percentual / comissoes.length)}</div>
                                    <div class="col text-end">${NumberFormatter.format(sum.total)}</div>
                                </div>        
                                  
                                ${comissoes.length > 0 ? produtoHeader : ''}
                                ${rows}
                            </div>
                            `);
                            // console.log(totais.get(key));
                            container.append(vContainer)
                        }
                    }
                    vendedorContainerMap.forEach(el => {
                        let total = totais.get(Number(el.id.replace('vendedor-', '')));
                        if (total) {
                            console.log(total);
                            el.append(`
                            <div class="row g-0" style="border-top: 0.05mm solid rgba(0, 0, 0, 0.4); background-color: #c1c1c1; text-transform: uppercase; font-weight: bold;">
                                <div class="col"></div>
                                <div class="col-auto me-5 text-end">Total: ${NumberFormatter.format(total.total)}</div>
                                <div class="col-auto me-5 text-end">Desconto aplicado: ${NumberFormatter.format(total.desconto)}</div>
                                <div class="col-auto text-end">Valor total comissão: ${NumberFormatter.format(total.comissao)}</div>
                            </div>
                            `)
                        }
                    })
                }

            });
        }
    </script>
    <div class="card p-2 placeholder-glow">
        <div class="card-header --placeholder" id="card-header-container"
            style="border: 0.05mm solid rgba(0, 0, 0, 0.4);">

        </div>

        <div class="card-body --placeholder p-0" id="card-body-container"
            style="font-size: 8pt; border: 0.05mm solid #c1c1c1;">

            <div id="pageFooter"></div>
        </div>

    </div>
</body>

</html>