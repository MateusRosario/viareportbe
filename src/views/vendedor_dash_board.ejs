<!-- CHART GOOGLE -->
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
<!--Load the AJAX API-->
<link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.2/dist/css/bootstrap.min.css" rel="stylesheet"
	integrity="sha384-EVSTQN3/azprG1Anm3QDgpJLIm9Nao0Yz1ztcQTwFspd3yD65VohhpuuCOmLASjC" crossorigin="anonymous" />

<!-- JQUERY -->
<script type="text/javascript" src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.4/jquery.min.js"></script>

<script type="text/javascript">
	// Load the Visualization API and the piechart package.
	google.charts.load("current", { packages: ["corechart"] });

	// Set a callback to run when the Google Visualization API is loaded.
	google.charts.setOnLoadCallback(drawChartPizzaTotais);

	var chart = null;

	var listaTotalizadoresByVendedor = [];
	var listaGroupByFormaPagamento = [];
	var listaGroupByGrupoProduto = [];
	var listaRankingProdutos = [];

	const state = {
		INICIOU: 'INICIOU',
		CONSULTANDO: 'CARREGANDO',
		CONSULTA_FINALIZADA: 'CONSULTA FINALIZADA'
	}

	var paginaState = state.INICIOU;

	var values = '<%-JSON.stringify(values) %>';
	var formas = '<%-JSON.stringify(formas) %>';
	var grupos = '<%-JSON.stringify(grupos) %>';

	const formatter = new Intl.NumberFormat("pt-BR", { style: "currency", currency: "BRL" });

	function Loading() {
		this.paginaState = state.CONSULTANDO;
		$('#mensagem-incial-container').attr("hidden", "true");

		$('#content-container').attr("hidden", "true");

		$("#container-loader").removeAttr("hidden");
	}

	function SetTotalizadoresByVendedor(listaTotalizador, listaGroupByFormaPagamento, _listaGroupByGrupoProduto, _listRankingProdutos) {
		if (this.paginaState === state.CONSULTANDO) {
			$('#mensagem-incial-container').attr("hidden", "true");

			$('#content-container').removeAttr("hidden");

			$("#container-loader").attr("hidden", "true");
		}

		this.paginaState = state.CONSULTA_FINALIZADA;

		this.listaGroupByGrupoProduto = _listaGroupByGrupoProduto;


		this.listaGroupByFormaPagamento = listaGroupByFormaPagamento;
		this.listaRankingProdutos = _listRankingProdutos;
		// console.log("listaGroupByFormaPagamento: ", this.listaGroupByFormaPagamento);
		// console.log("TotalizadoresByVendedor: ", listaTotalizador);
		// console.log('listaGroupByGrupoProduto: ', this.listaGroupByGrupoProduto);
		// console.log('listRankingProdutos: ', this.listRankingProdutos);

		console.log(listaTotalizador);

		this.listaTotalizadoresByVendedor = listaTotalizador;

		for (let index = 0; index < listaTotalizadoresByVendedor.length; index++) {
			listaTotalizadoresByVendedor[index]["formas"] = this.listaGroupByFormaPagamento[index];
			listaTotalizadoresByVendedor[index]["grupo_produto"] = this.listaGroupByGrupoProduto[index];
		}

		listaTotalizadoresByVendedor.sort((a, b) => {
			if (a.liquido > b.liquido) return -1
			else if (a.liquido < b.liquido) return 1
			else 0;
		})

		drawChartPizzaTotais(listaTotalizador);
		drawTableRanking(listaTotalizador);
		drawChartPizzaFormasPagamento(this.listaGroupByFormaPagamento[0]);
	}

	function drawTableRanking(lista = []) {
		let tableBody = $("#body-tabela-totais-vendedores");
		let rows;
		tableBody.empty();

		if (lista.length > 0) {
			for (let index = 0; index < lista.length; index++) {
				tableBody.append(
					$("<tr>")
						.append(`<th scope="row">${index + 1}</th>`)
						.append(`<td>${lista[index].nome}</td>`)
						.append(`<td>${formatter.format(lista[index].liquido)}</td>`)
				);
			}

			rows = tableBody.children();

			rows.each((index, el) => {
				$(el).on("click", (event) => {
					$(".row-clicked").removeClass("row-clicked");
					$(event.target).parent().children().addClass("row-clicked");

					let divBruto = $("#valorBruto");
					let divDesconto = $("#valorDesconto");
					let divCancelamento = $("#valorCancelamento");
					let divLiquido = $("#valorLiquido");
					let divDevolucao = $('#valorDevolvido');
					let divNomeVendedor = $('#nomeVendedor');

					divNomeVendedor.text(listaTotalizadoresByVendedor[index].nome);

					divBruto.text(formatter.format(listaTotalizadoresByVendedor[index].bruto));
					divDesconto.text(formatter.format(listaTotalizadoresByVendedor[index].desconto));
					divCancelamento.text(
						formatter.format(
							listaTotalizadoresByVendedor[index].vendaCancelada + listaTotalizadoresByVendedor[index].itemCancelado
						)
					);
					divDevolucao.text(formatter.format(listaTotalizadoresByVendedor[index].vendaDevolvida))
					divLiquido.text(formatter.format(listaTotalizadoresByVendedor[index].liquido));


					drawChartPizzaFormasPagamento(this.listaTotalizadoresByVendedor[index].formas);
					drawTableRankingFormasPagamento(this.listaTotalizadoresByVendedor[index].formas);
					drawChartColumnGrupoProduto(this.listaTotalizadoresByVendedor[index].grupo_produto);

					console.log(`clicou(${index}) - `, $(rows[index].children[1]).text());
				});
			});

			$(rows[0].children).trigger("click");
		} else {
			console.log("SEM REGISTROS");
		}
	}

	function drawChartPizzaTotais(valores_pizza = []) {
		// Create the data table.
		let arrayItens = [];

		let data = new google.visualization.DataTable();

		data.addColumn("string", "Topping");
		data.addColumn("number", "Slices");
		data.addColumn({ type: "string", role: "tooltip", p: { html: true } });

		if (valores_pizza.length > 0) {
			for (let index = 0; index < valores_pizza.length; index++) {
				arrayItens = arrayItens.concat([
					[
						valores_pizza[index].nome,
						valores_pizza[index].liquido,
						createCustomHTMLContent(
							valores_pizza[index].bruto,
							valores_pizza[index].desconto,
							valores_pizza[index].vendaCancelada + valores_pizza[index].itemCancelado,
							valores_pizza[index].vendaDevolvida,
							valores_pizza[index].liquido,
							valores_pizza[index].nome
						),
					],
				]);
			}
		} else {
			arrayItens = [
				["SEM VALORES", 1, createCustomHTMLContent(1, 1, 1, 1, "SEM VALORES")],
				["SEM VALORES", 1, createCustomHTMLContent(1, 1, 1, 1, "SEM VALORES")],
			];
		}

		data.addRows(arrayItens);

		// Set chart options
		var options = { title: "Ranking", height: 300, tooltip: { isHtml: true } };

		// Instantiate and draw our chart, passing in some options.
		this.chart = new google.visualization.PieChart(document.getElementById("chart_div"));
		this.chart.draw(data, options);
	}

	function createCustomHTMLContent(subtotal, descontos, cancelamentos, devolucao, liquido, vendedor) {
		return `<div style="background: #2e5da8; color: white; width: 200px; padding: 10px;" class="container">
    <div class="row">
      <div style="font-weight: bold;" class="col">
        ${vendedor}
      </div>
    </div>
    <div class="row">
      <div class="col">
        Subtotal
      </div>
      <div class="col">
        ${formatter.format(subtotal)}
      </div>
    </div>
    <div class="row">
      <div class="col">
        Descontos
      </div>
      <div class="col">
        ${formatter.format(descontos)}
      </div>
    </div>
    <div class="row">
      <div class="col">
        Cancelamentos
      </div>
      <div class="col">
        ${formatter.format(cancelamentos)}
      </div>
    </div>
	<div class="row">
      <div class="col">
        Devoluções
      </div>
      <div class="col">
        ${formatter.format(devolucao)}
      </div>
    </div>
    <div class="row">
      <div class="col">
        Líquido
      </div>
      <div class="col">
        ${formatter.format(liquido)}
      </div>
    </div>
  </div>`;
	}

	function drawChartPizzaFormasPagamento(valores_pizza = []) {
		// Create the data table.
		let arrayItens = [];

		let data = new google.visualization.DataTable();

		data.addColumn("string", "Topping");
		data.addColumn("number", "Slices");

		if (valores_pizza.length > 0) {
			for (let index = 0; index < valores_pizza.length; index++) {
				arrayItens = arrayItens.concat([
					[
						valores_pizza[index].nome,
						valores_pizza[index].total
					],
				]);
			}
		} else {
			arrayItens = [
				["SEM VALORES", 1],
				["SEM VALORES", 1],
			];
		}

		data.addRows(arrayItens);

		// Set chart options
		var options = { title: "Formas de Pagamento", height: 300 };

		// Instantiate and draw our chart, passing in some options.
		this.chart = new google.visualization.PieChart(document.getElementById("chart_div_formas_pagamento"));
		this.chart.draw(data, options);
	}

	function drawTableRankingFormasPagamento(lista = []) {
		let tableBody = $("#body-tabela-formas_pagamento");

		tableBody.empty();

		if (lista.length > 0) {
			for (let index = 0; index < lista.length; index++) {
				tableBody.append(
					$("<tr>")
						.append(`<th scope="row">${index + 1}</th>`)
						.append(`<td>${lista[index].nome}</td>`)
						.append(`<td>${formatter.format(lista[index].total)}</td>`)
				);
			}
		} else {
			console.log("SEM REGISTROS");
		}
	}

	function drawChartColumnGrupoProduto(valores = []) {
		var data = new google.visualization.DataTable();
		let arrayItens = [];

		data.addColumn('string', 'Grupo');
		data.addColumn('number', 'Total');
		data.addColumn({ role: 'annotation' })


		if (valores.length > 0) {
			for (let index = 0; index < valores.length; index++) {
				arrayItens = arrayItens.concat([
					[
						valores[index].nome,
						valores[index].total,
						formatter.format(valores[index].total),
					],
				]);
			}
		}

		data.addRows(arrayItens);

		var options = {
			title: 'Vendas Agrupadas Por Grupo de Produto',
			// width: 500,
			height: 300,
			legend: 'none',
			bar: { groupWidth: '95%' },
			annotations: {
				textStyle: {
					fontName: 'Times-Roman',
					fontSize: 18,
					bold: true,

					// The color of the text.
					color: '#871b47',
					// The color of the text outline.
					// auraColor: '#d799ae',

				}
			},
			vAxis: {
				textStyle: {
					fontName: 'Times-Roman',
					fontSize: 12,
					bold: true,
					color: '#00000',
				}
			}
		};

		chart = new google.visualization.BarChart(document.getElementById('chart_div_grupo_produto'));
		chart.draw(data, options);

	}


	drawTableRanking([]);

	function init(){
		
		if(values != undefined && values != null){
			const aux = JSON.parse(values);
			const first = aux[0];

			Loading();
			SetTotalizadoresByVendedor(aux, JSON.parse(formas), JSON.parse(grupos), undefined);
		}
	}

	setTimeout(() => {
		init()
	}, 500);

</script>

<style>
	body {
		background: #f3f3ff;
	}

	#mensagem-incial-container {
		margin: 200px auto;
		background: #c1c1c1;
	}

	#mensagem-incial {
		text-align: center;
		color: #2e5da8;
		font-weight: bold;
		font-size: 1.5em;
	}

	.nao-possui-registros {
		background-color: rgb(110, 110, 110);
		font-weight: bold;
	}

	.legenda {
		background-color: #2e5da8;
		border-radius: 5px;
		margin: 5px 10px;
		color: white;
		font-weight: bold;
	}

	.div-section {
		margin: 10px auto;
		box-shadow: 6px 0px 9px #cacaca, -3px 1px 12px #cacaca;
		background: #fffefe;
		border-radius: 5px;
		padding: 10px 0;
	}

	.div-section-interno {
		margin: 10px 10px;
		box-shadow: 1px 0px 2px #cacaca, -1px 1px 2px #cacaca;
		background: #fff;
		border-radius: 5px;
		padding: 10px 0;
	}

	table {
		border-spacing: 0;
		border-collapse: separate;
	}

	thead tr {
		padding: 5px;
		border-radius: 5px !important;
		background-color: #2e5da8 !important;
	}

	thead tr th {
		background-color: #2e5da8 !important;
		color: white !important;
		font-weight: bold !important;
	}

	.row-clicked {
		background-color: #7292c4 !important;
		color: white !important;
		font-weight: bold !important;
	}

	.col {
		margin-left: 5px;
	}

	.div-container-table {
		margin: 5px 10px;
	}

	.header-table {
		background-color: #2e5da8 !important;
		color: white;
		font-weight: bold;
		margin: auto;
		border-radius: 5px 5px 0 0 !important;
		width: 70%;
	}

	.body-table {
		background-color: #a11212;
	}

	h3 {
		margin-left: 10px;
		text-transform: uppercase;
		font-weight: bold;
		color: #2e5da8;
		background-color: #f0f0f0;
		padding-left: 15px;
		box-sizing: border-box;
	}

	.loader {
		margin: 200px auto;
		border: 16px solid #f3f3f3;
		border-radius: 50%;
		border-top: 16px solid #3498db;
		width: 120px;
		height: 120px;
		-webkit-animation: spin 2s linear infinite;
		/* Safari */
		animation: spin 2s linear infinite;
	}

	/* Safari */
	@-webkit-keyframes spin {
		0% {
			-webkit-transform: rotate(0deg);
		}

		100% {
			-webkit-transform: rotate(360deg);
		}
	}

	@keyframes spin {
		0% {
			transform: rotate(0deg);
		}

		100% {
			transform: rotate(360deg);
		}
	}
</style>

<div class="container">
	<div id="mensagem-incial-container" class="row">
		<div id="mensagem-incial">Clique em filtrar para carregar as informações!</div>
	</div>
	<div hidden id="container-loader" class="row">
		<div class="loader"></div>
	</div>
	<div hidden id="content-container" class="row">
		<div class="container div-section">
			<div class="container" style="display: flex; justify-content: center; align-items: center; padding: 10px">
				<div class="col table-responsive" id="table_totais_div" style="height: 300px; overflow-y: auto">
					<table class="table table-striped table-Active table-hover" style="margin: auto">
						<thead>
							<tr>
								<th scope="col">Rank</th>
								<th scope="col">Vendedor</th>
								<th scope="col">Valor</th>
							</tr>
						</thead>
						<tbody id="body-tabela-totais-vendedores"></tbody>
					</table>
				</div>
				<div class="col" id="chart_div" style="margin-right: 5px"></div>
			</div>
		</div>
		<div class="container div-section">
			<div class="row">
				<div class="col">
					<h3 id="nomeVendedor"></h3>
				</div>
			</div>

			<div class="row div-section-interno">
				<div class="row">
					<div class="col">
						<div class="row legenda">
							<div class="col">Bruto</div>
							<div id="valorBruto" class="col">R$ 10.000,00</div>
						</div>
						<div class="row legenda">
							<div class="col">Descontos</div>
							<div id="valorDesconto" class="col">R$ 10.000,00</div>
						</div>
						<div class="row legenda">
							<div class="col">Cancelamentos</div>
							<div id="valorCancelamento" class="col">R$ 10.000,00</div>
						</div>
						<div class="row legenda">
							<div class="col">Devoluções</div>
							<div id="valorDevolvido" class="col">R$ 10.000,00</div>
						</div>
					</div>
					<div class="col">
						<!-- <div class="row legenda">
								<div class="col">Orçamentos</div>
								<div id="valorOrcamentos" class="col">R$ 10.000,00</div>
							</div> -->
						<div class="row legenda">
							<div class="col">Liquido</div>
							<div id="valorLiquido" class="col">R$ 10.000,00</div>
						</div>
					</div>
				</div>
			</div>
			<div class="div-section-interno">
				<div style="display: flex; justify-content: center; align-items: center; padding: 10px">
					<div class="col table-responsive" id="table_formas_pagamento"
						style="height: 300px; overflow-y: auto">
						<table class="table table-striped table-Active" style="margin: auto">
							<thead>
								<tr>
									<th scope="col">Rank</th>
									<th scope="col">Forma de Pagamento</th>
									<th scope="col">Valor</th>
								</tr>
							</thead>
							<tbody id="body-tabela-formas_pagamento"></tbody>
						</table>
					</div>
					<div class="col" id="chart_div_formas_pagamento" style="margin-right: 5px"></div>
				</div>

			</div>
			<div class="div-section-interno">
				<div style="display: flex; justify-content: center; align-items: center; padding: 10px">
					<div class="col" id="chart_div_grupo_produto" style="margin-right: 5px"></div>
				</div>
			</div>

		</div>
	</div>
</div>



<!-- <div class="container div-section">
		<div style="margin: 0 15px;">
			<h3>Ranking Produtos</h3>
		</div>
		<div class="div-container-table">
			<div class="row header-table">
				<div class="col-1">#</div>
				<div class="col-9">Nome</div>
				<div class="col-2">Valor</div>
			</div>
			<div class="row body-table"></div>
		</div>
	</div> -->